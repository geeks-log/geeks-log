{"version":3,"file":"ui.js","sources":["ng://ui/button/types.ts","ng://ui/button/button-base.ts","ng://ui/button/button.component.ts","ng://ui/button/button.module.ts","ng://ui/public-api.ts","ng://ui/ui.ts"],"sourcesContent":["export const BUTTON_HOST_ATTRIBUTES = ['ui-icon-button', 'ui-flat-button'];\nexport const BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP = {\n  'ui-icon-button': 'Button--type-icon',\n  'ui-flat-button': 'Button--type-flat',\n};\n\nexport type ButtonColor = 'none' | 'primary';\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { ElementRef, Input, OnDestroy } from '@angular/core';\nimport { BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP, BUTTON_HOST_ATTRIBUTES, ButtonColor } from './types';\n\nexport abstract class ButtonBase<T extends HTMLElement> implements OnDestroy {\n  protected constructor(protected elementRef: ElementRef<T>, protected focusMonitor: FocusMonitor) {\n    this.hostElement.classList.add('Button');\n\n    // For each of the variant selectors that is prevent in the button's host\n    // attributes, add the correct corresponding class.\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this.hasHostAttributes(attr)) {\n        this.hostElement.classList.add(BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP[attr]);\n      }\n    }\n\n    this.focusMonitor.monitor(this.elementRef, true);\n  }\n\n  protected _color: ButtonColor;\n\n  @Input()\n  get color(): ButtonColor {\n    return this._color;\n  }\n\n  set color(color: ButtonColor) {\n    this.updateColorClassName(color);\n  }\n\n  get hostElement(): T {\n    return this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.ngOnDestroy();\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions) {\n    this.focusMonitor.focusVia(this.elementRef, origin, options);\n  }\n\n  protected updateColorClassName(color: ButtonColor): void {\n    const hostEl = this.hostElement;\n\n    if (this._color) {\n      const previousColorClassName = `Button--color-${this._color}`;\n\n      // Remove previous button color class.\n      if (hostEl.classList.contains(previousColorClassName)) {\n        hostEl.classList.remove(previousColorClassName);\n      }\n    }\n\n    if (color != null) {\n      const nextClassName = `Button--color-${color}`;\n      hostEl.classList.add(nextClassName);\n    }\n\n    this._color = color;\n  }\n\n  private hasHostAttributes(...attributes: string[]): boolean {\n    return attributes.some((attribute) => this.hostElement.hasAttribute(attribute));\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { ButtonBase } from './button-base';\n\n@Component({\n  selector: 'button[ui-button], button[ui-icon-button], button[ui-flat-button]',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent extends ButtonBase<HTMLButtonElement> {\n  constructor(elementRef: ElementRef<HTMLButtonElement>, focusMonitor: FocusMonitor) {\n    super(elementRef, focusMonitor);\n  }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n  imports: [CommonModule, A11yModule],\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent],\n})\nexport class ButtonModule {}\n","// button\nexport * from './button/button.component';\nexport * from './button/button.module';\nexport * from './button/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ButtonBase as Éµa} from './button/button-base';"],"names":[],"mappings":"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"}
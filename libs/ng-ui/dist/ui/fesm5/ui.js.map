{"version":3,"file":"ui.js","sources":["ng://ui/button/types.ts","ng://ui/button/button-base.ts","ng://ui/button/button.component.ts","ng://ui/button/button.module.ts","ng://ui/public-api.ts","ng://ui/ui.ts"],"sourcesContent":["export const BUTTON_HOST_ATTRIBUTES = ['ui-icon-button', 'ui-flat-button'];\nexport const BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP = {\n  'ui-icon-button': 'Button--type-icon',\n  'ui-flat-button': 'Button--type-flat',\n};\n\nexport type ButtonColor = 'none' | 'primary';\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { ElementRef, Input, OnDestroy } from '@angular/core';\nimport { BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP, BUTTON_HOST_ATTRIBUTES, ButtonColor } from './types';\n\nexport abstract class ButtonBase<T extends HTMLElement> implements OnDestroy {\n  protected constructor(protected elementRef: ElementRef<T>, protected focusMonitor: FocusMonitor) {\n    this.hostElement.classList.add('Button');\n\n    // For each of the variant selectors that is prevent in the button's host\n    // attributes, add the correct corresponding class.\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this.hasHostAttributes(attr)) {\n        this.hostElement.classList.add(BUTTON_HOST_ATTRIBUTE_CLASS_NAME_MAP[attr]);\n      }\n    }\n\n    this.focusMonitor.monitor(this.elementRef, true);\n  }\n\n  protected _color: ButtonColor;\n\n  @Input()\n  get color(): ButtonColor {\n    return this._color;\n  }\n\n  set color(color: ButtonColor) {\n    this.updateColorClassName(color);\n  }\n\n  get hostElement(): T {\n    return this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.ngOnDestroy();\n  }\n\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions) {\n    this.focusMonitor.focusVia(this.elementRef, origin, options);\n  }\n\n  protected updateColorClassName(color: ButtonColor): void {\n    const hostEl = this.hostElement;\n\n    if (this._color) {\n      const previousColorClassName = `Button--color-${this._color}`;\n\n      // Remove previous button color class.\n      if (hostEl.classList.contains(previousColorClassName)) {\n        hostEl.classList.remove(previousColorClassName);\n      }\n    }\n\n    if (color != null) {\n      const nextClassName = `Button--color-${color}`;\n      hostEl.classList.add(nextClassName);\n    }\n\n    this._color = color;\n  }\n\n  private hasHostAttributes(...attributes: string[]): boolean {\n    return attributes.some((attribute) => this.hostElement.hasAttribute(attribute));\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { ButtonBase } from './button-base';\n\n@Component({\n  selector: 'button[ui-button], button[ui-icon-button], button[ui-flat-button]',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent extends ButtonBase<HTMLButtonElement> {\n  constructor(elementRef: ElementRef<HTMLButtonElement>, focusMonitor: FocusMonitor) {\n    super(elementRef, focusMonitor);\n  }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n  imports: [CommonModule, A11yModule],\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent],\n})\nexport class ButtonModule {}\n","// button\nexport * from './button/button.component';\nexport * from './button/button.module';\nexport * from './button/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ButtonBase as Éµa} from './button/button-base';"],"names":[],"mappings":"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"}